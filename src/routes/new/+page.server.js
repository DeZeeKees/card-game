import { redirect } from "@sveltejs/kit";
import { parseNonPOJO, parseCard, getRandomNumberWithPercentages } from '$lib/helpers.js'

// This function is called at page load
export const load = async ({ locals, depends }) => {

    depends("getcard:load");

    let allParsedCards = [];

    // If the user is not logged in, redirect to the home page
    if(locals.pb?.authStore?.isValid == false) {
        throw redirect(303, '/');
    }

    //gets a random number based on the percentages
    const percentages = [55, 23.39, 10, 5, 3, 2, 1, 0.5, 0.1, 0.01];
    const randomNumber = getRandomNumberWithPercentages(percentages,10);

    //gets all cards
    const _allCards = await locals.pb.collection('cards').getFullList(200, {});

    //parses all cards to POJO
    const allCards = await parseNonPOJO(_allCards);

    //adds data from related collections to the cards
    const parseForeach = await allCards.map(async (card, index) => {
            let parsedCard = await parseCard(locals, card)
            allParsedCards.push(parsedCard)
    })
    await Promise.all(parseForeach)

    //filters the cards based on the rarity generated by the getRandomNumberWithPercentages function
    allParsedCards = allParsedCards.filter(card => card.rarityValue == randomNumber);

    if(allParsedCards.length == 0) {
        return {
            message: 'No cards found',
            new: false,
            cardData: false
        }
    }

    //gets a random card from the filtered cards
    const randomCard = allParsedCards[Math.floor(Math.random() * allParsedCards.length)];

    //checks if the user already owns the card
    if(locals.user.ownedCards.includes(randomCard.id)) {
        return {
            message: 'You already own this card',
            new: false,
            cardData: randomCard
        }
    }

    //adds the card to the user's owned cards
    await locals.pb.collection('users').update(locals.user.id, {
        ownedCards: [...locals.user.ownedCards, randomCard.id]
    })

    //returns the card data
    return {
        message: 'You got a new card!',
        new: true,
        cardData: randomCard,
    }
};